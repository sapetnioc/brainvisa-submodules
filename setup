#!/bin/sh

export CASA=$( dirname $(readlink -f "$0") )
SRC="$CASA/src"

set -e
set -x

if [ ! -e "$SRC" ]; then
    git clone -b master https://bioproj.extra.cea.fr/git/3dns-private "$SRC/3dns-private"
    git clone -b master https://github.com/brainvisa/aims-free.git "$SRC/aims-free"
    git clone -b master https://github.com/brainvisa/aims-gpl.git "$SRC/aims-gpl"
    git clone -b master https://github.com/brainvisa/anatomist-free.git "$SRC/anatomist-free"
    git clone -b master https://github.com/brainvisa/anatomist-gpl.git "$SRC/anatomist-gpl"
    git clone -b master https://github.com/brainvisa/axon.git "$SRC/axon"
    git clone -b master https://bioproj.extra.cea.fr/git/bioprocessing "$SRC/bioprocessing"
    git clone -b master https://bioproj.extra.cea.fr/git/brainrat-gpl "$SRC/brainrat-gpl"
    git clone -b master https://bioproj.extra.cea.fr/git/brainrat-private "$SRC/brainrat-private"
    git clone -b no_bv_env https://github.com/brainvisa/brainvisa-cmake.git "$SRC/brainvisa-cmake"
    git clone -b master https://bioproj.extra.cea.fr/git/brainvisa-disco "$SRC/brainvisa-disco"
    git clone -b master https://github.com/brainvisa/brainvisa-share.git "$SRC/brainvisa-share"
    git clone -b master https://github.com/brainvisa/brainvisa-spm.git "$SRC/brainvisa-spm"
    git clone -b master https://github.com/brainvisa/brainvisa_freesurfer.git "$SRC/brainvisa_freesurfer"
    git clone -b master https://github.com/populse/capsul.git "$SRC/capsul"
    git clone -b toolboxes https://github.com/brainvisa/casa-distro.git "$SRC/casa-distro"
    git clone -b main https://github.com/cati-neuroimaging/catidb-client.git "$SRC/catidb-client"
    git clone -b master https://github.com/brainvisa/constellation-gpl.git "$SRC/constellation-gpl"
    git clone -b master https://github.com/brainvisa/constellation-nonfree.git "$SRC/constellation-nonfree"
    git clone -b master https://github.com/brainvisa/cortical_surface-gpl.git "$SRC/cortical_surface-gpl"
    git clone -b master https://github.com/brainvisa/cortical_surface-nonfree.git "$SRC/cortical_surface-nonfree"
    git clone -b master https://github.com/cati-neuroimaging/deidentification.git "$SRC/deidentification"
    git clone -b master https://github.com/neurospin/highres-cortex.git "$SRC/highres-cortex"
    git clone -b master https://github.com/cati-neuroimaging/longitudinal_pipelines.git "$SRC/longitudinal_pipelines"
    git clone -b master https://github.com/brainvisa/morpho-deepsulci.git "$SRC/morpho-deepsulci"
    git clone -b master https://github.com/brainvisa/morphologist.git "$SRC/morphologist"
    git clone -b master https://bioproj.extra.cea.fr/git/brainvisa-t1mri/morphologist-baby.git "$SRC/morphologist-baby"
    git clone -b master https://github.com/brainvisa/morphologist-gpl.git "$SRC/morphologist-gpl"
    git clone -b master https://github.com/brainvisa/morphologist-nonfree.git "$SRC/morphologist-nonfree"
    git clone -b master https://github.com/cati-neuroimaging/nuclear_imaging-gpl.git "$SRC/nuclear_imaging-gpl"
    git clone -b master https://github.com/cati-neuroimaging/nuclear_imaging-nonfree.git "$SRC/nuclear_imaging-nonfree"
    git clone -b master https://github.com/populse/populse_db.git "$SRC/populse_db"
    git clone -b master https://bioproj.extra.cea.fr/git/preclinical-imaging-iam "$SRC/preclinical-imaging-iam"
    git clone -b master https://bioproj.extra.cea.fr/git/primatologist-gpl "$SRC/primatologist-gpl"
    git clone -b main https://github.com/cati-neuroimaging/qualicati.git "$SRC/qualicati"
    git clone -b master https://github.com/cati-neuroimaging/rsfmri.git "$SRC/rsfmri"
    git clone -b master https://github.com/cati-neuroimaging/sacha-gpl.git "$SRC/sacha-gpl"
    git clone -b master https://github.com/cati-neuroimaging/sacha-nonfree.git "$SRC/sacha-nonfree"
    git clone -b master https://github.com/populse/soma-base.git "$SRC/soma-base"
    git clone -b master https://github.com/brainvisa/soma-io.git "$SRC/soma-io"
    git clone -b master https://github.com/populse/soma-workflow.git "$SRC/soma-workflow"
    git clone -b master https://github.com/brainvisa/sulci-nonfree.git "$SRC/sulci-nonfree"
    git clone -b master https://bioproj.extra.cea.fr/git/brainvisa-commu/web.git "$SRC/web"
    git clone -b master https://github.com/cati-neuroimaging/whasa-gpl.git "$SRC/whasa-gpl"
    git clone -b master https://github.com/cati-neuroimaging/whasa-nonfree.git "$SRC/whasa-nonfree"
fi


installer_url=https://github.com/conda-forge/miniforge/releases/latest/download/Mambaforge-Linux-x86_64.sh
# installer_url=https://github.com/conda-forge/miniforge/releases/latest/download/Miniforge3-Linux-x86_64.sh
# installer_url=https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh
installer=$(echo $installer_url | awk '{split($0, s, "/"); print(s[length(s)])}')
if [ ! -e "$CASA/$installer" ]; then
    wget -O "$CASA/$installer" $installer_url
fi


if [ ! -e "$CASA/conda" ]; then
    mkdir "$CASA/conda"
    sh "$CASA/$installer" -u -b -p "$CASA/conda"
    if [ ! "$CASA/conda/bin/mamba" ]; then
        # If mamba is installed, we use conda-forge
        export conda="$CASA/conda/bin/mamba"
        export conda_install="-y"
        # Use most recent glibc ABI (the one used by conda-forge to compile Qt)
        "$conda" install -y sysroot-conda_2_28-x86_64
    else
        # mamba is not installed, we use anaconda
        export conda="$CASA/conda/bin/conda"
        export conda_install="-y --solver=libmamba"
        # Install packages to use mamba to find packages
        "$conda" install -y -n base conda-libmamba-solver
    fi
    $CASA/setup_run_conda
    $CASA/setup_run_compiled
    $CASA/setup_dev_conda
fi
